Project Name: YoYo-Forum

Database Requirements(PostgreSql):

-> User:-------------------------------------------------------->
--> ID								                            |
--> Nickname							                        |
--> Password							                        |
--> E-mail							                            |
--> IsMailHidden						                        |
--> IsModerator							                        |
--> IsAdmin							                            |
--> LastActivity							                    |
--> IsFounder							                        |
								                                |
<---------------------------------------------------------------V
--> Login:
---> VerifyCode
---> Location
---> Ip adress
---> Token
---> LastLogin

-> PrivateMessages:
--> MessageID
--> From
--> To
--> Subject
--> Content
--> SeenByFrom
--> SeenByTo


-> Categories:
--> CategoryName
--> CategoryExplanation
--> LastActivity
--> Threads
|
V
--> Threads:
---> ThreadID
---> Topic
---> ThreadExplanation
---> Views
---> Replies
---> IsPinned
  |
  V
---> Replies:
----> Reply ID
----> Reply Time
----> Reply content

For writing replies and threads:

-> Summernote

Pages And Contents:

-> Navbar
-> Footer
-> Sign on
-> Sign in
-> Login
-> Categories
-> Threads
-> Replies
-> New Category
-> New Thread
-> Profile
-> Settings
-> Forum Setup

Project Steps:

1. Project Create		                            (Configuration)                                     ✓

2. Project Configuration	                        (Configuration)                                     ✓(barely)

3. Creating Migration File	                        (Database)                                          ✓
3.1. Create Database
3.2. Create User Table
3.3. Create Categories Table
3.4. Create PrivateMessages Table

4. Add Dockerfile                                   (Configuration)

5. Add Vue.js and configure Vue(node one)

6. Write UI			                                (View)
6.1. Write Navbar
6.2. Write Footer
6.3. Write Background

7. Write Sign-On Page		                        (Model-View-Controller)
7.1. Create Sign-On Model
7.2. Create Sign-On Controller
7.3. Create Sign-On View

8. Write Sign-In Page 		                        (Model-View-Controller)
8.1. Create Sign-In Model
8.2. Create Sign-In Controller
8.3. Create Sign-In View

9. Write Login Page 		                        (Model-View-Controller)
9.1. Create Login Model
9.2. Create Login Controller
9.3. Create Login View

10. Write Categories Page	                        (Model-View-Controller)
10.1. Create Categories Model
10.2. Create Categories Controller
10.3. Create Categories View

11. Write Threads Page		                        (Database-Model-View-Controller)
11.1. Create Threads Table Under Categories Table
11.2. Create Categories Model
11.3. Create Categories Controller
11.4. Create Categories View

12. Write Replies Page		                        (Database-Model-View-Controller)
12.1. Create Replies Table Under Threads Table
12.2. Create Replies Model
12.3. Create Replies Controller
12.4. Create Replies View

13. Write "New Category" Page	                    (Model-View-Controller)
13.1. Create newCategory Model
13.2. Create newCategory Controller
13.3. Create newCategory View

14. Write "New Thread" Page	                        (Model-View-Controller)
14.1. Create newThread Model
14.2. Create newThread Controller
14.3. Create newThread View

15. Write "User Profile" Page	                    (Model-View-Controller)
15.1. Create UserProfile Model
15.2. Create UserProfile Controller
15.3. Create UserProfile View

16. Write Settings Page		                        (Model-View-Controller)
16.1. Create Settings Model         
16.2. Create Settings Controller
16.3. Create Settings View

17. Write Setup Page		                        (Model-View-Controller)
17.1. Create Setup Model
17.2. Create Setup Controller
17.3. Create Setup View

In Frontend:
Vue, Inertia

In Backend:
Laravel

In Future:
Can be add roles.
Can be add special threads.
